@* Spinner (Cargando) *@
@if(spinnerloading){
    <div class="backdrop-container bdc-white"  >
        <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>    
    </div>

    <style>
        #main-page{
            filter: blur(5px) !important;
        }
    </style>
}
@* Modal para visualizar textos *@
@if(modal){
    <div class="backdrop-container"  >
        <div class="backdrop-inner ">
            <div class=btn-container>
                <button type="default" class="btn btn-danger" @onclick="closemodal">X</button>
            </div>
            <div class="content-container">
                <h3>@modaltitle</h3>
                <p>
                    @foreach (var (item, index) in TextReading.readlines(@modalpath).Select((value, i) => (value, i))){
                        @((MarkupString)(item + " "))
                        if (item == ""){
                            <br/>
                            <br/>
                        }
                    }   
                </p>
            </div>
        </div>
    </div>
    <style>
        #main-page{
            filter: blur(5px) !important;
        }
    </style>
}

@page "/"

<PageTitle>Moogle</PageTitle>
<div id="main-page">
    @* Header *@
    <div id="main-container" style="margin: 25vh auto">

        <h1 class="maintitle">
            <span style="color: rgb(26,115,232)">M</span>
            <span style="color: rgb(224,63,44)" >o</span>
            <span style="color: rgb(252,196,36)">o</span>
            <span style="color: rgb(26,115,232)">g</span>
            <span style="color: rgb(63,149,69)" >l</span>
            <span style="color: rgb(224,63,44)" >e</span>
        </h1>
        
        <div class="container-form">
            <input id="form-input"
                    class="p-1 my-4" 
                    @bind="query" 
                    placeholder="Haz una búsqueda en Moogle ;)" 
                    @onkeyup="@Enter"
                    @oninput="@(e=> {query=(string)e.Value;})"
                    >
            <span class="material-symbols-outlined"  
                @onclick="@(()=> exR() )"
                id="search-icon"
                >search</span>
            @if(query!=""){
                <span class="material-symbols-outlined"  
                    @onclick="@(e => {query="";})"
                    id="clear-icon"
                    >close</span>
            }
            
        </div>
        
    </div>

    @* Sugerencias *@
    @if (!string.IsNullOrEmpty(result.Suggestion)) {
        <style>
            #main-container{
                margin: 0 !important;  
            }
            .maintitle{
                font-size: 4rem !important;
            }
        </style>
        <hr style="margin-top: -10px">
        <div class="suggestion">
            <p>¿Quisiste decir 
                <strong>
                    <a class="suggestion-a" 
                        @onclick="@(() => exR(result.Suggestion))" 
                    >@result.Suggestion</a>
                </strong>?
            </p>
        </div>
    }

    @* Resultados *@
    <div class="results">
        @foreach (var item in result.Items()) {
            @if(item.Score!=0){

                <div class="container-item">
                    <a class="item" @onclick="@(e => openmodal(item.Title, item.Path))" >
                        <div >
                            <h3 class="title">@item.Title</h3>
                            <p style="margin: 0;">... @item.Snippet ...</p>
                            <p style="text-align: right;">@((float)item.Score)</p>
                        </div>
                    </a>
                </div>
            }
        }
    </div>
    
    @* No se encontraron Resultados *@
    @if(result.Suggestion=="Moogle*"){
        <h4>Lo sentimos no se encontraron coincidecias :(</h4>
    }
</div>

@* Codigo C# *@
@code {
    [Inject] private  IJSRuntime _js { get; set; }
    public bool spinnerloading= false;
    private string query = "";
    private bool modal= false;
    private string modalpath= "";
    private string modaltitle= "";
    
    private SearchResult result = new SearchResult();
    
    private void closemodal(){
        modal=false;
        modalpath="";
        modaltitle="";
    }
    private  void openmodal(string a, string b){
        modal=true;
        modaltitle=a;
        modalpath = b;
    }
    private void RunQuery(string q="") {
        if(q!="")
            query=q;

        if(query!=""){
            spinnerloading=true;
            result = Moogle.Query(query);
            spinnerloading=false;
        }
        @* else
            await _js.InvokeAsync<bool>("SetFocusByElementId", "form-input"); *@
    }
    public void exR(string q=""){
        RunQuery(q);
        MoogleEngine.Moogle.loading=false;
    }
    public void Enter(KeyboardEventArgs e){
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
            RunQuery();
        spinnerloading=false;
    }   
}

